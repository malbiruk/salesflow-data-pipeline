[project]
name = "salesflow-data-pipeline"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "agate==1.9.1",
    "altair==5.5.0",
    "annotated-types==0.7.0",
    "asn1crypto==1.5.1",
    "attrs==25.3.0",
    "azure-common==1.1.28",
    "azure-core==1.33.0",
    "azure-identity==1.21.0",
    "azure-mgmt-core==1.5.0",
    "azure-mgmt-datafactory==9.1.0",
    "azure-mgmt-resource==23.3.0",
    "azure-mgmt-storage==22.1.1",
    "azure-storage-blob==12.25.1",
    "babel==2.17.0",
    "black==25.1.0",
    "blinker==1.9.0",
    "cachetools==5.5.2",
    "certifi==2025.1.31",
    "cffi==1.17.1",
    "charset-normalizer==3.4.1",
    "click==8.0.4",
    "colorama==0.4.6",
    "cryptography==44.0.2",
    "daff==1.4.2",
    "dbt-adapters==1.14.8",
    "dbt-common==1.24.0",
    "dbt-core==1.9.4",
    "dbt-extractor==0.6.0",
    "dbt-semantic-interfaces==0.7.4",
    "dbt-snowflake==1.9.4",
    "deepdiff==7.0.1",
    "filelock==3.18.0",
    "gitdb==4.0.12",
    "gitpython==3.1.44",
    "greenlet==3.2.2 ; (python_full_version < '3.14' and platform_machine == 'AMD64') or (python_full_version < '3.14' and platform_machine == 'WIN32') or (python_full_version < '3.14' and platform_machine == 'aarch64') or (python_full_version < '3.14' and platform_machine == 'amd64') or (python_full_version < '3.14' and platform_machine == 'ppc64le') or (python_full_version < '3.14' and platform_machine == 'win32') or (python_full_version < '3.14' and platform_machine == 'x86_64')",
    "idna==3.10",
    "importlib-metadata==6.11.0",
    "iniconfig==2.1.0",
    "isodate==0.6.1",
    "jaraco-classes==3.4.0",
    "jaraco-context==6.0.1",
    "jaraco-functools==4.1.0",
    "jeepney==0.9.0 ; sys_platform == 'linux'",
    "jinja2==3.1.6",
    "jsonschema==4.23.0",
    "jsonschema-specifications==2025.4.1",
    "keyring==25.6.0",
    "leather==0.4.0",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mashumaro==3.14",
    "mdurl==0.1.2",
    "more-itertools==10.7.0",
    "msal==1.32.0",
    "msal-extensions==1.3.1",
    "msgpack==1.1.0",
    "mypy-extensions==1.1.0",
    "narwhals==1.38.2",
    "networkx==3.4.2",
    "numpy==2.2.5",
    "ordered-set==4.1.0",
    "packaging==24.2",
    "pandas==2.2.3",
    "parsedatetime==2.6",
    "pathspec==0.12.1",
    "pillow==11.2.1",
    "platformdirs==4.3.7",
    "plotly==6.0.1",
    "pluggy==1.5.0",
    "protobuf==5.29.4",
    "pyarrow==20.0.0",
    "pycparser==2.22",
    "pydantic==2.11.4",
    "pydantic-core==2.33.2",
    "pydeck==0.9.1",
    "pygments==2.19.1",
    "pyjwt==2.10.1",
    "pympler==1.1",
    "pyopenssl==25.0.0",
    "pytest==8.3.5",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "python-slugify==8.0.4",
    "pytimeparse==1.1.8",
    "pytz==2025.2",
    "pywin32==310 ; sys_platform == 'win32'",
    "pywin32-ctypes==0.2.3 ; sys_platform == 'win32'",
    "pyyaml==6.0.2",
    "referencing==0.36.2",
    "requests==2.32.3",
    "rich==14.0.0",
    "rpds-py==0.24.0",
    "ruff==0.11.9",
    "secretstorage==3.3.3 ; sys_platform == 'linux'",
    "semver==3.0.4",
    "six==1.17.0",
    "smmap==5.0.2",
    "snowflake-connector-python==3.14.0",
    "snowflake-sqlalchemy==1.7.3",
    "snowplow-tracker==1.1.0",
    "sortedcontainers==2.4.0",
    "sqlalchemy==2.0.40",
    "sqlparse==0.5.3",
    "streamlit==1.45.0",
    "text-unidecode==1.3",
    "toml==0.10.2",
    "tomlkit==0.13.2",
    "tornado==6.4.2",
    "typing-extensions==4.13.2",
    "typing-inspection==0.4.0",
    "tzdata==2025.2",
    "tzlocal==5.3.1",
    "urllib3==2.4.0",
    "validators==0.35.0",
    "watchdog==6.0.0 ; sys_platform != 'darwin'",
    "zipp==3.21.0",
]

[dependency-groups]
dev = ["black>=25.1.0", "pytest>=8.3.5", "ruff>=0.11.5"]

[tool.ruff]
target-version = "py312"
line-length = 100
indent-width = 4

[tool.ruff.lint]
ignore = [
    "D",       # pydocstyle docstring rules
    "B905",    # `zip()` without an explicit `strict=` parameter
    "PLR0913", # Too many arguments to function call
    "TRY003",  # Avoid specifying long messages outside the exception class
    "EM101",   # Exception must not use a string literal, assign to variable first
    "EM102",   # Exception must not use a f-string literal, assign to variable first
    "BLE001",  # Do not catch blind exception: `Exception`
    "S603",    # This rule is prone to errors
]
select = ["ALL"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.uv.workspace]
members = ["dbt"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Allow assertions in tests
    "PLR2004", # Allow magic values in tests
    "ANN",     # Skip annotation rules in tests
]
